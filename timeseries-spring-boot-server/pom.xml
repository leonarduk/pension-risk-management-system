<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.leonarduk</groupId>
	<artifactId>timeseries-spring-boot-server</artifactId>
	<version>0.1.3-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>timeseries-spring-boot-server</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.3</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>com.leonarduk.finance.api.App</start-class>
		<java.version>11</java.version>
		<log4jdbc.log4j2.version>1.16</log4jdbc.log4j2.version>
		<rest.assured.version>2.3.3</rest.assured.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<webscraper-core.version>1.0.17</webscraper-core.version>
		<jacoco.version>0.8.4</jacoco.version>
		<jahoo.finance.version>3.15.0</jahoo.finance.version>
	</properties>

	<repositories>

		<repository>
			<id>sonatype</id>
			<url>https://oss.sonatype.org/content/groups/public</url>
		</repository>
		<repository>
			<id>central.maven.org</id>
			<url>http://central.maven.org/maven2/</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-transcoder -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-transcoder</artifactId>
			<version>1.11</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-codec -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-codec</artifactId>
			<version>1.11</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.yahoofinance-api/YahooFinanceAPI -->
		<dependency>
			<groupId>com.yahoofinance-api</groupId>
			<artifactId>YahooFinanceAPI</artifactId>
			<version>${jahoo.finance.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest.assured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.leonarduk</groupId>
			<artifactId>timeseries-source-and-analysis</artifactId>
			<version>0.1.2-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.leonarduk</groupId>
			<artifactId>webscraper-core</artifactId>
			<version>${webscraper-core.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-entitymanager</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- ta4j -->
		<dependency>
			<groupId>org.ta4j</groupId>
			<artifactId>ta4j-core</artifactId>
			<version>0.12</version>
		</dependency>
		<dependency>
			<groupId>au.com.bytecode</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.0.19</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreesvg</artifactId>
			<version>3.2</version>
		</dependency>
		<!-- google finance -->
		<dependency>
			<groupId>com.github.kevinsawicki</groupId>
			<artifactId>http-request</artifactId>
			<version>5.4</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
			<type>maven-plugin</type>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>2.5.3</version>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>2.2.3</version>
        </dependency>

    </dependencies>
	<build>
		<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <fork>true</fork>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <!-- Remove existing image from local repo -->
<!--                    <execution>
                        <id>docker-clean</id>
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>rmi</argument>
                                <argument>leonarduk/finance-html-docker:${project.version}</argument>
                                <argument>- -force</argument>
                            </arguments>
                        </configuration>
                    </execution>
-->
                    <!--
                      Create new docker image using Dockerfile which must be present in current working directory.
                      Tag the image using maven project version information.
                    -->
                    <execution>
                        <id>docker-build</id>
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>build</argument>
                                <argument>-t</argument>
                                <argument>leonarduk/finance-html-docker:${project.version}</argument>
                                <argument>.</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Login and Push the image to a docker repo. -->
                    <execution>
                        <id>docker-login</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>login</argument>
                                <argument>-u</argument>
                                <argument>${docker.user}</argument>
                                <argument>-p</argument>
                                <argument>${docker.password}</argument>
                                <argument>https://index.docker.io/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-push</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>push</argument>
                                <argument>leonarduk/finance-html-docker:${project.version}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.2.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.9.1</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<organization>
		<name>Leonard UK Ltd</name>
		<url>http://leonarduk.com</url>
	</organization>
	<inceptionYear>2017</inceptionYear>
	<licenses>
		<license>
			<name>GNU General Public License v3.0 or later</name>
			<url>http://www.spdx.org/licenses/GPL-3.0+</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>leonarduk</id>
			<name>Stephen Leonard</name>
			<email>github@leonarduk.com</email>
			<roles>
				<role>Project Manager</role>
				<role>Architect</role>
				<role>Developer</role>
			</roles>
			<organization>Leonard UK Ltd</organization>
			<organizationUrl>http://leonarduk.com</organizationUrl>
			<timezone>0</timezone>
			<url>http://uk.linkedin.com/in/steveleonard/</url>
		</developer>
	</developers><!-- to get to sona type and onto maven central -->
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/
			</url>
		</repository>
	</distributionManagement>
	<scm>
		<connection>scm:git:git@github.com:leonarduk/pension-risk-management-system.git
		</connection>
		<developerConnection>scm:git:git@github.com:leonarduk/pension-risk-management-system.git
		</developerConnection>
		<url>git@github.com:leonarduk/pension-risk-management-system.git</url>
	</scm>
</project>
